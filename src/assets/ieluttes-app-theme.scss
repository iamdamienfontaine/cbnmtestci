@import '~@angular/material/theming';

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
$display-4:     mat-typography-level(112px, 112px, 300);
$display-3:     mat-typography-level(56px, 56px, 400);
$display-2:     mat-typography-level(45px, 48px, 400);
$display-1:     mat-typography-level(34px, 40px, 400);
$headline:      mat-typography-level(24px, 32px, 400);
$title:         mat-typography-level(20px, 32px, 500);
$subheading-2:  mat-typography-level(16px, 28px, 400);
$subheading-1:  mat-typography-level(15px, 24px, 400);
$body-2:        mat-typography-level(14px, 24px, 500);
$body-1:        mat-typography-level(14px, 20px, 400);
$caption:       mat-typography-level(12px, 20px, 400);
$button:        mat-typography-level(14px, 14px, 500);
// Line-height must be unit-less fraction of the font-size.
$input:         mat-typography-level(inherit, 1.125, 400);

$config: (
    display-4:      $display-4,
    display-3:      $display-3,
    display-2:      $display-2,
    display-1:      $display-1,
    headline:       $headline,
    title:          $title,
    subheading-2:   $subheading-2,
    subheading-1:   $subheading-1,
    body-2:         $body-2,
    body-1:         $body-1,
    caption:        $caption,
    button:         $button,
    input:          $input,
);
$font-family:   '"Roboto Condensed", "Helvetica Neue", sans-serif';

// Loop through the levels and set the `font-family` of the ones that don't have one to the base.
// Note that Sass can't modify maps in place, which means that we need to merge and re-assign.
@each $key, $level in $config {
    @if map-get($level, font-family) == null {
    $new-level: map-merge($level, (font-family: $font-family));
    $config: map-merge($config, ($key: $new-level));
    }
}

$configtest: map-merge($config, (font-family: $font-family));

@include mat-core( $configtest );

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-blue);
$candy-app-accent:  mat-palette($mat-purple, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);
